# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'select'
    vstsFeed: 'b2430cf7-78c0-440a-aa4a-a25665c5778e'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:Configuration=Release /p:DeployOnBuild=true /p:WebPublishMethod=FileSystem /p:PublishProfile=FolderProfile.pubxml /p:PackageAsSingleFile=true /p:publishUrl="$(build.artifactStagingDirectory)\\"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  displayName: 'Delete additional files'
  inputs:
    targetType: 'inline'
    script: |
      Remove-Item -Recurse -Force $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\Configuration -Verbose
      Remove-Item -Recurse -Force $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\DiagnosticTools -Verbose
      Remove-Item -Recurse -Force $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\bin\amd64 -Verbose
      Remove-Item -Recurse -Force $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\bin\staticcontent -Verbose
      Remove-Item -Recurse -Force $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\bin\x64 -Verbose
      Remove-Item -Recurse -Force $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\bin\x86 -Verbose
      Remove-Item -Recurse -Force $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\bin\DiagnosticAnalysis -Verbose
      Remove-Item $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\bin\* -include *.ps1, *.html -Verbose
      Remove-Item $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\bin\Dia2Lib.dll -Verbose
      Remove-Item $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\bin\OSExtensions.dll -Verbose
      Remove-Item $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\bin\TraceReloggerLib.dll -Verbose
      
      $fileVersion = [System.Diagnostics.FileVersionInfo]::GetVersionInfo("$Env:BUILD_ARTIFACTSTAGINGDIRECTORY\bin\daas.dll").FileVersion
      $fileVersion
      
      Write-Host "##vso[task.setvariable variable=DAAS_VERSION]$fileVersion"

- task: ArchiveFiles@2
  displayName: 'Create Daas Site Extension Zip file'
  inputs:
    rootFolderOrFile: '$(build.artifactStagingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/DaaS_$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      md $Env:AGENT_BUILDDIRECTORY\Temp\SiteExt
      Copy-Item -Path $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\DaaS_$Env:BUILD_BUILDID.zip -Destination $Env:AGENT_BUILDDIRECTORY\Temp\SiteExt\DaaS_$Env:BUILD_BUILDID.zip -Verbose
      
      Write-Host Cleaning up (BUILD.ARTIFACTSTAGINGDIRECTORY)
      Remove-Item -Recurse -Force $Env:BUILD_ARTIFACTSTAGINGDIRECTORY -Verbose
      
      md $Env:BUILD_ARTIFACTSTAGINGDIRECTORY
      Copy-Item -Path $Env:AGENT_BUILDDIRECTORY\Temp\SiteExt\DaaS_$Env:BUILD_BUILDID.zip -Destination $Env:BUILD_ARTIFACTSTAGINGDIRECTORY\DaaS_$Env:BUILD_BUILDID.zip 
      Write-Host FileVersion is $Env:DAAS_VERSION
    failOnStderr: true
    showWarnings: true

- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'Private Test Sub PUNEETG(6b6db65f-680e-4650-b97d-e82ed6a0f583)'
    ScriptType: 'InlineScript'
    Inline: |
      $resources = az resource list --resource-group $Env:RESOURCE_GROUP | ConvertFrom-Json
          Write-Host "Deleting Web Apps..."
          foreach ($resource in $resources) {
              if ($resource.id -like '*/providers/Microsoft.Web/sites/*') {
                Write-Host $("  Deleting " + $resource.id)
                az resource delete --resource-group $Env:RESOURCE_GROUP --ids $resource.id --verbose
              }
          }
          Write-Host "Deleting App Service Plans"
          foreach ($resource in $resources) {
              if ($resource.id -like '*/providers/Microsoft.Web/serverfarms/*') {
                Write-Host $("  Deleting " + $resource.id)
                az resource delete --resource-group $Env:RESOURCE_GROUP --ids $resource.id --verbose
              }
          }
    azurePowerShellVersion: 'LatestVersion'
  
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(build.artifactStagingDirectory)'
    artifactName: drop

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
