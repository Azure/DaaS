# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'select'
    vstsFeed: 'b2430cf7-78c0-440a-aa4a-a25665c5778e'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /T:"DiagnosticsExtension" /p:PublishProfile=FolderProfile.pubxml /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)\\"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(build.artifactStagingDirectory)/*.zip'
    destinationFolder: '$(Agent.BuildDirectory)/Temp/SiteExtensionContents'
    cleanDestinationFolder: true
    overwriteExistingFiles: false

- task: CopyFiles@2
  displayName: 'Copy Site Extension bits to SiteExtensionZip folder'
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)/Temp/SiteExtensionContents/Content/D_C/a/1/s/DiagnosticsExtension/obj/Release/Package/PackageTmp'
    Contents: |
      **
    TargetFolder: '$(Agent.BuildDirectory)/Temp/SiteExtensionZip'

- task: PowerShell@2
  displayName: 'Copy CLR tools to DiagnosticTools'
  inputs:
    targetType: 'inline'
    script: |
      md $Env:AGENT_BUILDDIRECTORY\Temp\SiteExtensionZip\bin\DiagnosticTools\clrprofiler
      Copy-Item -Path $Env:BUILD_SOURCESDIRECTORY\ClrProfilingCollector\bin\x64\Release\* -Destination $Env:AGENT_BUILDDIRECTORY\Temp\SiteExtensionZip\bin\DiagnosticTools\clrprofiler -recurse -Force
    failOnStderr: true
    showWarnings: true

- task: CopyFiles@2
  displayName: 'Copy remaining toos to DiagnosticTools'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      MemoryDumpCollector\MemoryDumpCollector\bin\Release\**
      DiagnosticAnalysisLauncher\bin\Release\**
      DiagnosticAnalysisLauncher\bin\Release\DiagnosticAnalysis\**
      StdoutCollector\bin\Release\**
    TargetFolder: '$(Agent.BuildDirectory)/Temp/SiteExtensionZip/bin/DiagnosticTools'
    flattenFolders: true

- task: CopyFiles@2
  displayName: 'Copy stacktracer to DiagnosticTools'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      StackTracer32\bin\x86\Release\**
      StackTracer64\bin\x64\Release\**
    TargetFolder: '$(Agent.BuildDirectory)/Temp/SiteExtensionZip/bin/DiagnosticTools/clrprofiler/stacktracer'
    flattenFolders: true
    
- task: CopyFiles@2
  displayName: 'Copy DaasConsole, DaasRunner to bin'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      DaasConsole\bin\Release\**
      DaasRunner\bin\x64\Release\**
    TargetFolder: '$(Agent.BuildDirectory)/Temp/SiteExtensionZip/bin'
    flattenFolders: true

- task: ArchiveFiles@2
  displayName: 'Create Daas Site Extension Zip file'
  inputs:
    rootFolderOrFile: '$(Agent.BuildDirectory)/Temp/SiteExtensionZip'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/DaaS_$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: CmdLine@2
  displayName: 'Folder Paths (Only for Debugging)'
  inputs:
    script: |
      echo "Structure of work folder of this pipeline:"
      tree $(Agent.WorkFolder)\1 /f
      echo "Build.ArtifactStagingDirectory:" 
      echo "$(Build.ArtifactStagingDirectory)"
      echo "Build.BinariesDirectory:" 
      echo "$(Build.BinariesDirectory)"
      echo "Build.SourcesDirectory:"
      echo "$(Build.SourcesDirectory)"
      echo "Structure of Agent.BuildDirectory/Temp:"
      tree $(Agent.BuildDirectory)\Temp /f
      
      echo "Structure of Agent.BuildDirectory/Temp/SiteExtensionZip"
      tree $(Agent.BuildDirectory)\Temp\SiteExtensionZip /f

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(build.artifactStagingDirectory)'
    artifactName: drop

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
